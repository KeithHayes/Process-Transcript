async def prepare_data():
    configure_logging()
    async with ParseFile() as filerunner:
        filerunner.preprocess(INPUT_FILE)
        await filerunner.process(PROCESSED_FILE)

async def main():
    configure_logging()
    logger = logging.getLogger('main')
    try:
        await prepare_data()
        logger.info("Processing completed successfully")
    except Exception as e:
        logger.error(f"Processing failed: {str(e)}", exc_info=True)
        raise

if __name__ == "__main__":
    asyncio.run(main())

    will be changed to

    async with ParseFile() as filerunner:
        await filerunner.process(INPUT_FILE)

        tthe call to preproccess is gone and the file argument is changed.

        in process.py the process function will be changed to call the preprocess function before it does anything else 
        this added line will prepare the PROCESSED_FILE which will then be used as it is now