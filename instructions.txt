The only file to be modified is process.py 

    def formatchunk(self):
        self.logger.debug(f'Formatting chunk')
        # Currently just a stub, no actual formatting

is to be completed.

The following code is from another project and is for reference only.  We will be doing something similar, but not exacly the same.  
In our case the chunk will be searched for sentences and the leading and trailing spaces in front of and behind of the sentence will be 
replaced by '\n' for each sentence found.  This changesthe chunk by selectively replacing spaces with '\n'  
, 

async def formatchunk(self):
    complete with revised rules.

RULES:
1. PRESERVE ALL original words exactly in order
2. Add a newline after before each sentence replacing the space
3. Add a newline after each sentence replacing the space
4. Do not change or remove any words
5. Do not add any new words or change word order

Formatted version:"""

        async with aiohttp.ClientSession() as session:
            async with session.post(
                API_URL,
                json={
                    "prompt": prompt,
                    "max_tokens": MAX_TOKENS,
                    "temperature": TEMPERATURE,
                    "stop": STOP_SEQUENCES,
                    "repetition_penalty": REPETITION_PENALTY,
                    "top_p": TOP_P
                },
                timeout=aiohttp.ClientTimeout(total=API_TIMEOUT)
            ) as response:
                if response.status != 200:
                    self.logger.warning(f"API returned status {response.status}")
                    return
                result = await response.json()
                self.chunk = result.get("choices", [{}])[0].get("text", self.chunk).strip()
                
    except Exception as e:
        self.logger.error(f"API call failed: {str(e)}")

